#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.100.13)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Succulent", "CloudA", "CloudB", "CloudC", "CloudC_1", "CloudB_1", "Rain", "Alert_Color", "Orange_Dot"]
    def "Succulent" (
        active = true
        references = @Succulent.usdz@
    )
    {
        float3 xformOp:scale = (0.5, 0.5, 0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "CloudA" (
        active = true
        references = @CloudA.usda@
    )
    {
        float3 xformOp:scale = (1, 0.5, 0.5)
        float3 xformOp:translate = (0.15, 0.6, -0.20102)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "CloudB" (
        active = true
        customData = {
            float3 rotationEulerHint = (-0.03267877, 0, 0)
        }
        references = @CloudB.usda@
    )
    {
        quatf xformOp:orient = (0.9998665, -0.016338658, 0, 0)
        float3 xformOp:scale = (1, 0.5, 0.5)
        float3 xformOp:translate = (0.05, 0.45, 0.007815778)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "CloudC" (
        active = true
        references = @CloudC.usda@
    )
    {
        float3 xformOp:scale = (1, 0.5, 0.5)
        float3 xformOp:translate = (-0.15, 0.5, -0.28872508)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Material "Alert_Color"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Alert_Color/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 0.4184437, 0.06819347) (
                colorSpace = "srgb_displayp3"
            )
            token outputs:surface
        }
    }

    def "Orange_Dot" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @Green Dot.usdz@
    )
    {
        rel material:binding = None (
            bindMaterialAs = "weakerThanDescendants"
        )
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.3, 1, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Cylinder" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Alert_Color> (
                bindMaterialAs = "weakerThanDescendants"
            )
        }
    }
}

